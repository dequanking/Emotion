/*
 * Copyright (c) 2016 名片项目组 All rights reserved.
 */

package com.poetic.emotion;



import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * <p>通用表情Fragment的数据</p>
 * <p>Created by poetic on  2016/4/7 17:15 &nbsp;Email: <a href="mailto:dequanking@qq.com">dequanking@qq.com.</a></p>
 */
public class EmotionData {
    private static Map<CharSequence, Integer> emotionMap;

    private static Map<Integer, EmotionMetaData> mMap;

    public static Map<Integer, EmotionMetaData> getMap(){
        if(mMap == null){
            mMap = new HashMap<>();
            List<String> list = new ArrayList<>();
            initData(list);
            for(String sequence : list) {
                EmotionMetaData data = new EmotionMetaData(sequence);
                mMap.put(data.getValue(), data);
            }
        }
        return mMap;
    }
    public static Map<CharSequence, Integer> getEmotionMap(){
        if(emotionMap == null){
            emotionMap.putAll(EmotionData.getFirstResNameMap());
            emotionMap.putAll(EmotionData.getSecondResNameMap());
            emotionMap.putAll(EmotionData.getThirdResNameMap());
            emotionMap.putAll(EmotionData.getFourthResNameMap());
        }
        return emotionMap;
    }

    /**
     * 返回第一页通用表情的数据map
     */
    public static Map<Integer, EmotionMetaData> getFirstEmotionMap() {
        Map<Integer, EmotionMetaData> map = new HashMap<>();
        /*map.put(R.mipmap.angry_face, new EmotionMetaData("\u1F620", "\ud83d\ude20"));
        map.put(R.mipmap.weary_face, new EmotionMetaData("U+1F629", "\ud83d\ude29"));
        map.put(R.mipmap.astonished_face, new EmotionMetaData("U+1F632", "\ud83d\ude32"));
        map.put(R.mipmap.disappointed_face, new EmotionMetaData("U+1F61E", "\ud83d\ude1e"));
        map.put(R.mipmap.face_with_open_mouth_and_cold_sweat, new EmotionMetaData("U+1F630", "\ud83d\ude30"));
        map.put(R.mipmap.unamused_face, new EmotionMetaData("U+1F612", "\ud83d\ude12"));
        map.put(R.mipmap.smiling_face_with_heart_shaped_eyes, new EmotionMetaData("U+1F60D", "\ud83d\ude0d"));
        map.put(R.mipmap.face_with_look_of_triumph, new EmotionMetaData("U+1F624", "\ud83d\ude24"));
        map.put(R.mipmap.face_with_stuck_out_tongue_and_winking_eye, new EmotionMetaData("U+1F61C", "\ud83d\ude1c"));
        map.put(R.mipmap.face_with_stuck_out_tongue_and_tightly_closed_eyes, new EmotionMetaData("U+1F61D", "\ud83d\ude1d"));
        map.put(R.mipmap.face_savouring_delicious_food, new EmotionMetaData("U+1F60B", "\ud83d\ude0b"));
        map.put(R.mipmap.face_throwing_a_kiss, new EmotionMetaData("U+1F618", "\ud83d\ude18"));
        map.put(R.mipmap.kissing_face_with_closed_eyes, new EmotionMetaData("U+1F61A", "\ud83d\ude1a"));
        map.put(R.mipmap.flushed_face, new EmotionMetaData("U+1F633", "\ud83d\ude33"));
        map.put(R.mipmap.smiling_face_with_open_mouth, new EmotionMetaData("U+1F603", "\ud83d\ude03"));
        map.put(R.mipmap.smiling_face_with_open_mouth_and_cold_sweat, new EmotionMetaData("U+1F605", "\ud83d\ude05"));
        map.put(R.mipmap.smiling_face_with_open_mouth_and_tightly_closed_eyes, new EmotionMetaData("U+1F606", "\ud83d\ude06"));
        map.put(R.mipmap.grinning_face_with_smiling_eyes, new EmotionMetaData("U+1F601", "\ud83d\ude01"));
        map.put(R.mipmap.face_with_tears_of_joy, new EmotionMetaData("U+1F602", "\ud83d\ude02"));
        map.put(R.mipmap.smiling_face_with_smiling_eyes, new EmotionMetaData("U+1F60A", "\ud83d\ude0a"));
        map.put(R.mipmap.smiling_face_with_open_mouth_and_smiling_eyes, new EmotionMetaData("U+1F604", "\ud83d\ude04"));
        map.put(R.mipmap.crying_face, new EmotionMetaData("U+1F622", "\ud83d\ude22"));
        map.put(R.mipmap.face_with_medical_mask, new EmotionMetaData("U+1F637", "\ud83d\ude37"));
        map.put(R.mipmap.del, new EmotionMetaData("cancel", "\u2716"));*/

        return map;
    }
    /**
     * 返回第二页通用表情的数据map
     */
    public static Map<Integer, EmotionMetaData> getSecondEmotionMap(){
        Map<Integer, EmotionMetaData> map = new HashMap<>();
        /*map.put(R.mipmap.loudly_crying_face,new EmotionMetaData("U+1F62D","\ud83d\ude2d"));
        map.put(R.mipmap.fearful_face,new EmotionMetaData("U+1F628","\ud83d\ude28"));
        map.put(R.mipmap.persevering_face,new EmotionMetaData("U+1F623","\ud83d\ude23"));
        map.put(R.mipmap.pouting_face,new EmotionMetaData("U+1F621","\ud83d\ude21"));
        map.put(R.mipmap.relieved_face, new EmotionMetaData("U+1F60C","\ud83d\ude0c"));
        map.put(R.mipmap.confounded_face,new EmotionMetaData("U+1F616","\ud83d\ude16"));
        map.put(R.mipmap.pensive_face,new EmotionMetaData("U+1F614","\ud83d\ude14"));
        map.put(R.mipmap.face_screaming_in_fear,new EmotionMetaData("U+1F631","\ud83d\ude31"));
        map.put(R.mipmap.sleepy_face,new EmotionMetaData("U+1F62A","\ud83d\ude2a"));
        map.put(R.mipmap.smirking_face,new EmotionMetaData("U+1F60F","\ud83d\ude0f"));
        map.put(R.mipmap.face_with_cold_sweat,new EmotionMetaData("U+1F613","\ud83d\ude13"));
        map.put(R.mipmap.disappointed_but_relieved_face,new EmotionMetaData("U+1F625","\ud83d\ude25"));
        map.put(R.mipmap.tired_face,new EmotionMetaData("U+1F62B","\ud83d\ude2b"));
        map.put(R.mipmap.winking_face,new EmotionMetaData("U+1F609","\ud83d\ude09"));
        map.put(R.mipmap.face_with_no_good_gesture,new EmotionMetaData("U+1F645","\ud83d\ude45"));
        map.put(R.mipmap.person_with_folded_hands,new EmotionMetaData("U+1F64F","\ud83d\ude4f"));
        map.put(R.mipmap.eyeglasses,new EmotionMetaData("U+1F453","\ud83d\udc53"));
        map.put(R.mipmap.t_shirt,new EmotionMetaData("U+1F455","\ud83d\udc55"));
        map.put(R.mipmap.dress,new EmotionMetaData("U+1F457","\ud83d\udc57"));
        map.put(R.mipmap.handbag,new EmotionMetaData("U+1F45C","\ud83d\udc5c"));
        map.put(R.mipmap.fire,new EmotionMetaData("U+1F525","\ud83d\udd25"));
        map.put(R.mipmap.pistol,new EmotionMetaData("U+1F52B","\ud83d\udd2b"));
        map.put(R.mipmap.pill,new EmotionMetaData("U+1F48A","\ud83d\udc8a"));
        map.put(R.mipmap.del,new EmotionMetaData("cancel","\u2716"));*/
        return map;
    }
    /**
     * 返回第三页页通用表情的数据map
     */
    public static Map<Integer, EmotionMetaData> getThirdEmotionMap(){
        Map<Integer, EmotionMetaData> map = new HashMap<>();
        /*map.put(R.mipmap.birthday_cake,new EmotionMetaData("U+1F382","\ud83c\udf82"));
        map.put(R.mipmap.mobile_phone,new EmotionMetaData("U+1F4F1","\ud83d\udcf1"));
        map.put(R.mipmap.fax_machine,new EmotionMetaData("U+1F4E0","\ud83d\udce0"));
        map.put(R.mipmap.e_mail,new EmotionMetaData("U+1F4E7","\ud83d\udce7"));
        map.put(R.mipmap.newspaper,new EmotionMetaData("U+1F4F0","\ud83d\udcf0"));
        map.put(R.mipmap.computer,new EmotionMetaData("U+1F4BB","\ud83d\udcbb"));
        map.put(R.mipmap.disc,new EmotionMetaData("U+1F4BF","\ud83d\udcbf"));
        map.put(R.mipmap.notice,new EmotionMetaData("U+1F4CB","\ud83d\udccb"));
        map.put(R.mipmap.chart_with_upwards_trend,new EmotionMetaData("U+1F4C8","\ud83d\udcc8"));
        map.put(R.mipmap.chart_with_downwards_trend,new EmotionMetaData("U+1F4C9","\ud83d\udcc9"));
        map.put(R.mipmap.telephone,new EmotionMetaData("U+1F4DE","\ud83d\udcde"));
        map.put(R.mipmap.party_popper,new EmotionMetaData("U+1F389","\ud83c\udf89"));
        map.put(R.mipmap.calendar,new EmotionMetaData("U+1F4C6","\ud83d\udcc6"));
        map.put(R.mipmap.bar_chart,new EmotionMetaData("U+1F4CA","\ud83d\udcca"));
        map.put(R.mipmap.tennis,new EmotionMetaData("U+1F3BE","\ud83c\udfbe"));
        map.put(R.mipmap.bus,new EmotionMetaData("U+1F68C","\ud83d\ude8c"));
        map.put(R.mipmap.basketball,new EmotionMetaData("U+1F3C0","\ud83c\udfc0"));
        map.put(R.mipmap.swimmer,new EmotionMetaData("U+1F3CA","\ud83c\udfca"));
        map.put(R.mipmap.metro,new EmotionMetaData("U+1F687","\ud83d\ude87"));
        map.put(R.mipmap.automobile,new EmotionMetaData("U+1F697","\ud83d\ude97"));
        map.put(R.mipmap.delivery_truck,new EmotionMetaData("U+1F69A","\ud83d\ude9a"));
        map.put(R.mipmap.fire_engine,new EmotionMetaData("U+1F692","\ud83d\ude92"));
        map.put(R.mipmap.ambulance,new EmotionMetaData("U+1F691","\ud83d\ude91"));
        map.put(R.mipmap.del,new EmotionMetaData("cancel","\u2716"));*/
        return map;
    }
    /**
     * 返回第四页通用表情的数据map
     */
    public static Map<Integer, EmotionMetaData> getFourthEmotionMap(){
        Map<Integer, EmotionMetaData> map = new HashMap<>();
        /*map.put(R.mipmap.wrapped_present,new EmotionMetaData("U+1F381","\ud83c\udf81"));
        map.put(R.mipmap.microphone, new EmotionMetaData("U+1F3A4", "\ud83c\udfa4"));
        map.put(R.mipmap.video_game, new EmotionMetaData("U+1F3AE", "\ud83c\udfae"));
        map.put(R.mipmap.mahjong_tile_red_dragon, new EmotionMetaData("U+1F004", "\ud83c\udc04"));
        map.put(R.mipmap.billiards, new EmotionMetaData("U+1F3B1", "\ud83c\udfb1"));
        map.put(R.mipmap.game_die, new EmotionMetaData("U+1F3B2", "\ud83c\udfb2"));
        map.put(R.mipmap.bowling, new EmotionMetaData("U+1F3B3", "\ud83c\udfb3"));
        map.put(R.mipmap.musical_note, new EmotionMetaData("U+1F3B5", "\ud83c\udfb5"));
        map.put(R.mipmap.guitar, new EmotionMetaData("U+1F3B8", "\ud83c\udfb8"));
        map.put(R.mipmap.musical_keyboard, new EmotionMetaData("U+1F3B9", "\ud83c\udfb9"));
        map.put(R.mipmap.camera, new EmotionMetaData("U+1F4F7", "\ud83d\udcf7"));
        map.put(R.mipmap.video_camera, new EmotionMetaData("U+1F4F9", "\ud83d\udcf9"));
        map.put(R.mipmap.television, new EmotionMetaData("U+1F4FA", "\ud83d\udcfa"));
        map.put(R.mipmap.radio, new EmotionMetaData("U+1F4FB", "\ud83d\udcfb"));
        map.put(R.mipmap.kiss_mark, new EmotionMetaData("U+1F48B", "\ud83d\udc8b"));
        map.put(R.mipmap.videocassette, new EmotionMetaData("U+1F4FC", "\ud83d\udcfc"));
        map.put(R.mipmap.love_letter, new EmotionMetaData("U+1F48C", "\ud83d\udc8c"));
        map.put(R.mipmap.ring, new EmotionMetaData("U+1F48D", "\ud83d\udc8d"));
        map.put(R.mipmap.gem_stone, new EmotionMetaData("U+1F48E", "\ud83d\udc8e"));
        map.put(R.mipmap.kiss, new EmotionMetaData("U+1F48F", "\ud83d\udc8f"));
        map.put(R.mipmap.bouquet, new EmotionMetaData("U+1F490", "\ud83d\udc90"));
        map.put(R.mipmap.circus_tent, new EmotionMetaData("U+1F3AA ", "\ud83c\udfaa"));
        map.put(R.mipmap.direct_hit, new EmotionMetaData("U+1F3AF", "\ud83c\udfaf"));
        map.put(R.mipmap.del, new EmotionMetaData("cancel", "\u2716"));*/
        return map;
    }

    /**
     * 第一个通用表情页存有表情资源ID的map
     * 每个unicode对应一个字符串，用来在低版本中显示
     */
    public  static Map<CharSequence,Integer> getFirstResNameMap(){
        Map<CharSequence,Integer> map = new HashMap<>();
        /*map.put("\ud83d\ude20",R.string.angry_face);
        map.put("\ud83d\ude29",R.string.weary_face);
        map.put("\ud83d\ude32",R.string.astonished_face);
        map.put("\ud83d\ude1e",R.string.disappointed_face);
        map.put("\ud83d\ude30",R.string.face_with_open_mouth_and_cold_sweat);
        map.put("\ud83d\ude12",R.string.unamused_face);
        map.put("\ud83d\ude0d",R.string.smiling_face_with_heart_shaped_eyes);
        map.put("\ud83d\ude24",R.string.face_with_look_of_triumph);
        map.put("\ud83d\ude1c",R.string.face_with_stuck_out_tongue_and_winking_eye);
        map.put("\ud83d\ude1d",R.string.face_with_stuck_out_tongue_and_tightly_closed_eyes);
        map.put("\ud83d\ude0b",R.string.face_savouring_delicious_food);
        map.put("\ud83d\ude18",R.string.face_throwing_a_kiss);
        map.put("\ud83d\ude1a",R.string.kissing_face_with_closed_eyes);
        map.put("\ud83d\ude33",R.string.flushed_face);
        map.put("\ud83d\ude03",R.string.smiling_face_with_open_mouth);
        map.put("\ud83d\ude05",R.string.smiling_face_with_open_mouth_and_cold_sweat);
        map.put("\ud83d\ude06",R.string.smiling_face_with_open_mouth_and_tightly_closed_eyes);
        map.put("\ud83d\ude01",R.string.grinning_face_with_smiling_eyes);
        map.put("\ud83d\ude02",R.string.face_with_tears_of_joy);
        map.put("\ud83d\ude0a",R.string.smiling_face_with_smiling_eyes);
        map.put("\ud83d\ude04",R.string.smiling_face_with_open_mouth_and_smiling_eyes);
        map.put("\ud83d\ude22",R.string.crying_face);
        map.put("\ud83d\ude37",R.string.face_with_medical_mask);*/
        return map;
    }
    /**
     * 第二个通用表情页存有表情资源ID的map
     * 每个unicode对应一个字符串，用来在低版本中显示
     */
    public  static Map<CharSequence,Integer> getSecondResNameMap(){
        Map<CharSequence,Integer> map = new HashMap<>();
        /*map.put("\ud83d\ude2d",R.string.loudly_crying_face);
        map.put("\ud83d\ude28",R.string.fearful_face);
        map.put("\ud83d\ude23",R.string.persevering_face);
        map.put("\ud83d\ude21",R.string.pouting_face);
        map.put("\ud83d\ude0c",R.string.relieved_face);
        map.put("\ud83d\ude16",R.string.confounded_face);
        map.put("\ud83d\ude14",R.string.pensive_face);
        map.put("\ud83d\ude31",R.string.face_screaming_in_fear);
        map.put("\ud83d\ude2a",R.string.sleepy_face);
        map.put("\ud83d\ude0f",R.string.smirking_face);
        map.put("\ud83d\ude13",R.string.face_with_cold_sweat);
        map.put("\ud83d\ude25",R.string.disappointed_but_relieved_face);
        map.put("\ud83d\ude2b",R.string.tired_face);
        map.put("\ud83d\ude09",R.string.winking_face);
        map.put("\ud83d\ude45",R.string.person_with_folded_hands);
        map.put("\ud83d\ude4f",R.string.person_with_folded_hands);
        map.put("\ud83d\udc53",R.string.eyeglasses);
        map.put("\ud83d\udc55",R.string.t_shirt);
        map.put("\ud83d\udc57",R.string.dress);
        map.put("\ud83d\udc5c",R.string.handbag);
        map.put("\ud83d\udd25",R.string.fire);
        map.put("\ud83d\udd2b",R.string.pistol);
        map.put("\ud83d\udc8a",R.string.pill);*/
        return map;
    }
    /**
     * 第三个通用表情页存有表情资源ID的map
     * 每个unicode对应一个字符串，用来在低版本中显示
     */
    public  static Map<CharSequence,Integer> getThirdResNameMap(){
        Map<CharSequence,Integer> map = new HashMap<>();
        /*map.put("\ud83c\udf82",R.string.birthday_cake);
        map.put("\ud83d\udcf1",R.string.mobile_phone);
        map.put("\ud83d\udce0",R.string.fax_machine);
        map.put("\ud83d\udce7",R.string.e_mail);
        map.put("\ud83d\udcf0",R.string.newspaper);
        map.put("\ud83d\udcbb",R.string.computer);
        map.put("\ud83d\udcbf",R.string.disc);
        map.put("\ud83d\udccb",R.string.notice);
        map.put("\ud83d\udcc8",R.string.chart_with_upwards_trend);
        map.put("\ud83d\udcc9",R.string.chart_with_downwards_trend);
        map.put("\ud83d\udcde",R.string.telephone);
        map.put("\ud83c\udf89",R.string.party_popper);
        map.put("\ud83d\udcc6",R.string.calendar);
        map.put("\ud83d\udcca",R.string.bar_chart);
        map.put("\ud83c\udfbe",R.string.tennis);
        map.put("\ud83d\ude8c",R.string.bus);
        map.put("\ud83c\udfc0",R.string.basketball);
        map.put("\ud83c\udfca",R.string.swimmer);
        map.put("\ud83d\ude87",R.string.metro);
        map.put("\ud83d\ude97",R.string.automobile);
        map.put("\ud83d\ude9a",R.string.delivery_truck);
        map.put("\ud83d\ude92",R.string.fire_engine);
        map.put("\ud83d\ude91",R.string.ambulance);*/
        return map;
    }
    /**
     * 第四个通用表情页存有表情资源ID的map
     * 每个unicode对应一个字符串，用来在低版本中显示
     */
    public  static Map<CharSequence,Integer> getFourthResNameMap(){
        Map<CharSequence,Integer> map = new HashMap<>();
        /*map.put("\ud83c\udf81",R.string.wrapped_present);
        map.put("\ud83c\udfa4",R.string.microphone);
        map.put("\ud83c\udfae",R.string.video_game);
        map.put("\ud83c\udc04",R.string.mahjong_tile_red_dragon);
        map.put("\ud83c\udfb1",R.string.billiards);
        map.put("\ud83c\udfb2",R.string.game_die);
        map.put("\ud83c\udfb3",R.string.bowling);
        map.put("\ud83c\udfb5",R.string.musical_note);
        map.put("\ud83c\udfb8",R.string.guitar);
        map.put("\ud83c\udfb9",R.string.musical_keyboard);
        map.put("\ud83d\udcf7",R.string.camera);
        map.put("\ud83d\udcf9",R.string.video_camera);
        map.put("\ud83d\udcfa",R.string.television);
        map.put("\ud83d\udcfb",R.string.radio);
        map.put("\ud83d\udc8b",R.string.kiss_mark);
        map.put("\ud83d\udcfc",R.string.videocassette);
        map.put("\ud83d\udc8c",R.string.love_letter);
        map.put("\ud83d\udc8d",R.string.ring);
        map.put("\ud83d\udc8e",R.string.gem_stone);
        map.put("\ud83d\udc8f",R.string.kiss);
        map.put("\ud83d\udc90",R.string.bouquet);
        map.put("\ud83c\udfaa",R.string.circus_tent);
        map.put("\ud83c\udfaf",R.string.direct_hit);*/
        return map;
    }


    public static void initData(List<String>     list){
        list.add("u0023u20e3");
        list.add("u0030u20e3");
        list.add("u0031u20e3");
        list.add("u0032u20e3");
        list.add("u0033u20e3");
        list.add("u0034u20e3");
        list.add("u0035u20e3");
        list.add("u0036u20e3");
        list.add("u0037u20e3");
        list.add("u0038u20e3");
        list.add("u0039u20e3");
        list.add("u00a9");
        list.add("u00ae");
        list.add("u1f004");
        list.add("u1f0cf");
        list.add("u1f170");
        list.add("u1f171");
        list.add("u1f17e");
        list.add("u1f17f");
        list.add("u1f18e");
        list.add("u1f191");
        list.add("u1f192");
        list.add("u1f193");
        list.add("u1f194");
        list.add("u1f195");
        list.add("u1f196");
        list.add("u1f197");
        list.add("u1f198");
        list.add("u1f199");
        list.add("u1f19a");
        list.add("u1f1e8u1f1f3");
        list.add("u1f1e9u1f1ea");
        list.add("u1f1eau1f1f8");
        list.add("u1f1ebu1f1f7");
        list.add("u1f1ecu1f1e7");
        list.add("u1f1eeu1f1f9");
        list.add("u1f1efu1f1f5");
        list.add("u1f1f0u1f1f7");
        list.add("u1f1f7u1f1fa");
        list.add("u1f1fau1f1f8");
        list.add("u1f201");
        list.add("u1f202");
        list.add("u1f21a");
        list.add("u1f22f");
        list.add("u1f232");
        list.add("u1f233");
        list.add("u1f234");
        list.add("u1f235");
        list.add("u1f236");
        list.add("u1f237");
        list.add("u1f238");
        list.add("u1f239");
        list.add("u1f23a");
        list.add("u1f250");
        list.add("u1f251");
        list.add("u1f300");
        list.add("u1f301");
        list.add("u1f302");
        list.add("u1f303");
        list.add("u1f304");
        list.add("u1f305");
        list.add("u1f306");
        list.add("u1f307");
        list.add("u1f308");
        list.add("u1f309");
        list.add("u1f30a");
        list.add("u1f30b");
        list.add("u1f30c");
        list.add("u1f30d");
        list.add("u1f30e");
        list.add("u1f30f");
        list.add("u1f310");
        list.add("u1f311");
        list.add("u1f312");
        list.add("u1f313");
        list.add("u1f314");
        list.add("u1f315");
        list.add("u1f316");
        list.add("u1f317");
        list.add("u1f318");
        list.add("u1f319");
        list.add("u1f31a");
        list.add("u1f31b");
        list.add("u1f31c");
        list.add("u1f31d");
        list.add("u1f31e");
        list.add("u1f31f");
        list.add("u1f320");
        list.add("u1f330");
        list.add("u1f331");
        list.add("u1f332");
        list.add("u1f333");
        list.add("u1f334");
        list.add("u1f335");
        list.add("u1f337");
        list.add("u1f338");
        list.add("u1f339");
        list.add("u1f33a");
        list.add("u1f33b");
        list.add("u1f33c");
        list.add("u1f33d");
        list.add("u1f33e");
        list.add("u1f33f");
        list.add("u1f340");
        list.add("u1f341");
        list.add("u1f342");
        list.add("u1f343");
        list.add("u1f344");
        list.add("u1f345");
        list.add("u1f346");
        list.add("u1f347");
        list.add("u1f348");
        list.add("u1f349");
        list.add("u1f34a");
        list.add("u1f34b");
        list.add("u1f34c");
        list.add("u1f34d");
        list.add("u1f34e");
        list.add("u1f34f");
        list.add("u1f350");
        list.add("u1f351");
        list.add("u1f352");
        list.add("u1f353");
        list.add("u1f354");
        list.add("u1f355");
        list.add("u1f356");
        list.add("u1f357");
        list.add("u1f358");
        list.add("u1f359");
        list.add("u1f35a");
        list.add("u1f35b");
        list.add("u1f35c");
        list.add("u1f35d");
        list.add("u1f35e");
        list.add("u1f35f");
        list.add("u1f360");
        list.add("u1f361");
        list.add("u1f362");
        list.add("u1f363");
        list.add("u1f364");
        list.add("u1f365");
        list.add("u1f366");
        list.add("u1f367");
        list.add("u1f368");
        list.add("u1f369");
        list.add("u1f36a");
        list.add("u1f36b");
        list.add("u1f36c");
        list.add("u1f36d");
        list.add("u1f36e");
        list.add("u1f36f");
        list.add("u1f370");
        list.add("u1f371");
        list.add("u1f372");
        list.add("u1f373");
        list.add("u1f374");
        list.add("u1f375");
        list.add("u1f376");
        list.add("u1f377");
        list.add("u1f378");
        list.add("u1f379");
        list.add("u1f37a");
        list.add("u1f37b");
        list.add("u1f37c");
        list.add("u1f380");
        list.add("u1f381");
        list.add("u1f382");
        list.add("u1f383");
        list.add("u1f384");
        list.add("u1f385");
        list.add("u1f386");
        list.add("u1f387");
        list.add("u1f388");
        list.add("u1f389");
        list.add("u1f38a");
        list.add("u1f38b");
        list.add("u1f38c");
        list.add("u1f38d");
        list.add("u1f38e");
        list.add("u1f38f");
        list.add("u1f390");
        list.add("u1f391");
        list.add("u1f392");
        list.add("u1f393");
        list.add("u1f3a0");
        list.add("u1f3a1");
        list.add("u1f3a2");
        list.add("u1f3a3");
        list.add("u1f3a4");
        list.add("u1f3a5");
        list.add("u1f3a6");
        list.add("u1f3a7");
        list.add("u1f3a8");
        list.add("u1f3a9");
        list.add("u1f3aa");
        list.add("u1f3ab");
        list.add("u1f3ac");
        list.add("u1f3ad");
        list.add("u1f3ae");
        list.add("u1f3af");
        list.add("u1f3b0");
        list.add("u1f3b1");
        list.add("u1f3b2");
        list.add("u1f3b3");
        list.add("u1f3b4");
        list.add("u1f3b5");
        list.add("u1f3b6");
        list.add("u1f3b7");
        list.add("u1f3b8");
        list.add("u1f3b9");
        list.add("u1f3ba");
        list.add("u1f3bb");
        list.add("u1f3bc");
        list.add("u1f3bd");
        list.add("u1f3be");
        list.add("u1f3bf");
        list.add("u1f3c0");
        list.add("u1f3c1");
        list.add("u1f3c2");
        list.add("u1f3c3");
        list.add("u1f3c4");
        list.add("u1f3c6");
        list.add("u1f3c7");
        list.add("u1f3c8");
        list.add("u1f3c9");
        list.add("u1f3ca");
        list.add("u1f3e0");
        list.add("u1f3e1");
        list.add("u1f3e2");
        list.add("u1f3e3");
        list.add("u1f3e4");
        list.add("u1f3e5");
        list.add("u1f3e6");
        list.add("u1f3e7");
        list.add("u1f3e8");
        list.add("u1f3e9");
        list.add("u1f3ea");
        list.add("u1f3eb");
        list.add("u1f3ec");
        list.add("u1f3ed");
        list.add("u1f3ee");
        list.add("u1f3ef");
        list.add("u1f3f0");
        list.add("u1f400");
        list.add("u1f401");
        list.add("u1f402");
        list.add("u1f403");
        list.add("u1f404");
        list.add("u1f405");
        list.add("u1f406");
        list.add("u1f407");
        list.add("u1f408");
        list.add("u1f409");
        list.add("u1f40a");
        list.add("u1f40b");
        list.add("u1f40c");
        list.add("u1f40d");
        list.add("u1f40e");
        list.add("u1f40f");
        list.add("u1f410");
        list.add("u1f411");
        list.add("u1f412");
        list.add("u1f413");
        list.add("u1f414");
        list.add("u1f415");
        list.add("u1f416");
        list.add("u1f417");
        list.add("u1f418");
        list.add("u1f419");
        list.add("u1f41a");
        list.add("u1f41b");
        list.add("u1f41c");
        list.add("u1f41d");
        list.add("u1f41e");
        list.add("u1f41f");
        list.add("u1f420");
        list.add("u1f421");
        list.add("u1f422");
        list.add("u1f423");
        list.add("u1f424");
        list.add("u1f425");
        list.add("u1f426");
        list.add("u1f427");
        list.add("u1f428");
        list.add("u1f429");
        list.add("u1f42a");
        list.add("u1f42b");
        list.add("u1f42c");
        list.add("u1f42d");
        list.add("u1f42e");
        list.add("u1f42f");
        list.add("u1f430");
        list.add("u1f431");
        list.add("u1f432");
        list.add("u1f433");
        list.add("u1f434");
        list.add("u1f435");
        list.add("u1f436");
        list.add("u1f437");
        list.add("u1f438");
        list.add("u1f439");
        list.add("u1f43a");
        list.add("u1f43b");
        list.add("u1f43c");
        list.add("u1f43d");
        list.add("u1f43e");
        list.add("u1f440");
        list.add("u1f442");
        list.add("u1f443");
        list.add("u1f444");
        list.add("u1f445");
        list.add("u1f446");
        list.add("u1f447");
        list.add("u1f448");
        list.add("u1f449");
        list.add("u1f44a");
        list.add("u1f44b");
        list.add("u1f44c");
        list.add("u1f44d");
        list.add("u1f44e");
        list.add("u1f44f");
        list.add("u1f450");
        list.add("u1f451");
        list.add("u1f452");
        list.add("u1f453");
        list.add("u1f454");
        list.add("u1f455");
        list.add("u1f456");
        list.add("u1f457");
        list.add("u1f458");
        list.add("u1f459");
        list.add("u1f45a");
        list.add("u1f45b");
        list.add("u1f45c");
        list.add("u1f45d");
        list.add("u1f45e");
        list.add("u1f45f");
        list.add("u1f460");
        list.add("u1f461");
        list.add("u1f462");
        list.add("u1f463");
        list.add("u1f464");
        list.add("u1f465");
        list.add("u1f466");
        list.add("u1f467");
        list.add("u1f468");
        list.add("u1f469");
        list.add("u1f46a");
        list.add("u1f46b");
        list.add("u1f46c");
        list.add("u1f46d");
        list.add("u1f46e");
        list.add("u1f46f");
        list.add("u1f470");
        list.add("u1f471");
        list.add("u1f472");
        list.add("u1f473");
        list.add("u1f474");
        list.add("u1f475");
        list.add("u1f476");
        list.add("u1f477");
        list.add("u1f478");
        list.add("u1f479");
        list.add("u1f47a");
        list.add("u1f47b");
        list.add("u1f47c");
        list.add("u1f47d");
        list.add("u1f47e");
        list.add("u1f47f");
        list.add("u1f480");
        list.add("u1f481");
        list.add("u1f482");
        list.add("u1f483");
        list.add("u1f484");
        list.add("u1f485");
        list.add("u1f486");
        list.add("u1f487");
        list.add("u1f488");
        list.add("u1f489");
        list.add("u1f48a");
        list.add("u1f48b");
        list.add("u1f48c");
        list.add("u1f48d");
        list.add("u1f48e");
        list.add("u1f48f");
        list.add("u1f490");
        list.add("u1f491");
        list.add("u1f492");
        list.add("u1f493");
        list.add("u1f494");
        list.add("u1f495");
        list.add("u1f496");
        list.add("u1f497");
        list.add("u1f498");
        list.add("u1f499");
        list.add("u1f49a");
        list.add("u1f49b");
        list.add("u1f49c");
        list.add("u1f49d");
        list.add("u1f49e");
        list.add("u1f49f");
        list.add("u1f4a0");
        list.add("u1f4a1");
        list.add("u1f4a2");
        list.add("u1f4a3");
        list.add("u1f4a4");
        list.add("u1f4a5");
        list.add("u1f4a6");
        list.add("u1f4a7");
        list.add("u1f4a8");
        list.add("u1f4a9");
        list.add("u1f4aa");
        list.add("u1f4ab");
        list.add("u1f4ac");
        list.add("u1f4ad");
        list.add("u1f4ae");
        list.add("u1f4af");
        list.add("u1f4b0");
        list.add("u1f4b1");
        list.add("u1f4b2");
        list.add("u1f4b3");
        list.add("u1f4b4");
        list.add("u1f4b5");
        list.add("u1f4b6");
        list.add("u1f4b7");
        list.add("u1f4b8");
        list.add("u1f4b9");
        list.add("u1f4ba");
        list.add("u1f4bb");
        list.add("u1f4bc");
        list.add("u1f4bd");
        list.add("u1f4be");
        list.add("u1f4bf");
        list.add("u1f4c0");
        list.add("u1f4c1");
        list.add("u1f4c2");
        list.add("u1f4c3");
        list.add("u1f4c4");
        list.add("u1f4c5");
        list.add("u1f4c6");
        list.add("u1f4c7");
        list.add("u1f4c8");
        list.add("u1f4c9");
        list.add("u1f4ca");
        list.add("u1f4cb");
        list.add("u1f4cc");
        list.add("u1f4cd");
        list.add("u1f4ce");
        list.add("u1f4cf");
        list.add("u1f4d0");
        list.add("u1f4d1");
        list.add("u1f4d2");
        list.add("u1f4d3");
        list.add("u1f4d4");
        list.add("u1f4d5");
        list.add("u1f4d6");
        list.add("u1f4d7");
        list.add("u1f4d8");
        list.add("u1f4d9");
        list.add("u1f4da");
        list.add("u1f4db");
        list.add("u1f4dc");
        list.add("u1f4dd");
        list.add("u1f4de");
        list.add("u1f4df");
        list.add("u1f4e0");
        list.add("u1f4e1");
        list.add("u1f4e2");
        list.add("u1f4e3");
        list.add("u1f4e4");
        list.add("u1f4e5");
        list.add("u1f4e6");
        list.add("u1f4e7");
        list.add("u1f4e8");
        list.add("u1f4e9");
        list.add("u1f4ea");
        list.add("u1f4eb");
        list.add("u1f4ec");
        list.add("u1f4ed");
        list.add("u1f4ee");
        list.add("u1f4ef");
        list.add("u1f4f0");
        list.add("u1f4f1");
        list.add("u1f4f2");
        list.add("u1f4f3");
        list.add("u1f4f4");
        list.add("u1f4f5");
        list.add("u1f4f6");
        list.add("u1f4f7");
        list.add("u1f4f9");
        list.add("u1f4fa");
        list.add("u1f4fb");
        list.add("u1f4fc");
        list.add("u1f500");
        list.add("u1f501");
        list.add("u1f502");
        list.add("u1f503");
        list.add("u1f504");
        list.add("u1f505");
        list.add("u1f506");
        list.add("u1f507");
        list.add("u1f509");
        list.add("u1f50a");
        list.add("u1f50b");
        list.add("u1f50c");
        list.add("u1f50d");
        list.add("u1f50e");
        list.add("u1f50f");
        list.add("u1f510");
        list.add("u1f511");
        list.add("u1f512");
        list.add("u1f513");
        list.add("u1f514");
        list.add("u1f515");
        list.add("u1f516");
        list.add("u1f517");
        list.add("u1f518");
        list.add("u1f519");
        list.add("u1f51a");
        list.add("u1f51b");
        list.add("u1f51c");
        list.add("u1f51d");
        list.add("u1f51e");
        list.add("u1f51f");
        list.add("u1f520");
        list.add("u1f521");
        list.add("u1f522");
        list.add("u1f523");
        list.add("u1f524");
        list.add("u1f525");
        list.add("u1f526");
        list.add("u1f527");
        list.add("u1f528");
        list.add("u1f529");
        list.add("u1f52a");
        list.add("u1f52b");
        list.add("u1f52c");
        list.add("u1f52d");
        list.add("u1f52e");
        list.add("u1f52f");
        list.add("u1f530");
        list.add("u1f531");
        list.add("u1f532");
        list.add("u1f533");
        list.add("u1f534");
        list.add("u1f535");
        list.add("u1f536");
        list.add("u1f537");
        list.add("u1f538");
        list.add("u1f539");
        list.add("u1f53a");
        list.add("u1f53b");
        list.add("u1f53c");
        list.add("u1f53d");
        list.add("u1f550");
        list.add("u1f551");
        list.add("u1f552");
        list.add("u1f553");
        list.add("u1f554");
        list.add("u1f555");
        list.add("u1f556");
        list.add("u1f557");
        list.add("u1f558");
        list.add("u1f559");
        list.add("u1f55a");
        list.add("u1f55b");
        list.add("u1f55c");
        list.add("u1f55d");
        list.add("u1f55e");
        list.add("u1f55f");
        list.add("u1f560");
        list.add("u1f561");
        list.add("u1f562");
        list.add("u1f563");
        list.add("u1f564");
        list.add("u1f565");
        list.add("u1f566");
        list.add("u1f567");
        list.add("u1f5fb");
        list.add("u1f5fc");
        list.add("u1f5fd");
        list.add("u1f5fe");
        list.add("u1f5ff");
        list.add("u1f600");
        list.add("u1f601");
        list.add("u1f602");
        list.add("u1f603");
        list.add("u1f604");
        list.add("u1f605");
        list.add("u1f606");
        list.add("u1f607");
        list.add("u1f608");
        list.add("u1f609");
        list.add("u1f60a");
        list.add("u1f60b");
        list.add("u1f60c");
        list.add("u1f60d");
        list.add("u1f60e");
        list.add("u1f60f");
        list.add("u1f610");
        list.add("u1f611");
        list.add("u1f612");
        list.add("u1f613");
        list.add("u1f614");
        list.add("u1f615");
        list.add("u1f616");
        list.add("u1f617");
        list.add("u1f618");
        list.add("u1f619");
        list.add("u1f61a");
        list.add("u1f61b");
        list.add("u1f61c");
        list.add("u1f61d");
        list.add("u1f61e");
        list.add("u1f61f");
        list.add("u1f620");
        list.add("u1f621");
        list.add("u1f622");
        list.add("u1f623");
        list.add("u1f624");
        list.add("u1f625");
        list.add("u1f626");
        list.add("u1f627");
        list.add("u1f628");
        list.add("u1f629");
        list.add("u1f62a");
        list.add("u1f62b");
        list.add("u1f62c");
        list.add("u1f62d");
        list.add("u1f62e");
        list.add("u1f62f");
        list.add("u1f630");
        list.add("u1f631");
        list.add("u1f632");
        list.add("u1f633");
        list.add("u1f634");
        list.add("u1f635");
        list.add("u1f636");
        list.add("u1f637");
        list.add("u1f638");
        list.add("u1f639");
        list.add("u1f63a");
        list.add("u1f63b");
        list.add("u1f63c");
        list.add("u1f63d");
        list.add("u1f63e");
        list.add("u1f63f");
        list.add("u1f640");
        list.add("u1f645");
        list.add("u1f646");
        list.add("u1f647");
        list.add("u1f648");
        list.add("u1f649");
        list.add("u1f64a");
        list.add("u1f64b");
        list.add("u1f64c");
        list.add("u1f64d");
        list.add("u1f64e");
        list.add("u1f64f");
        list.add("u1f680");
        list.add("u1f681");
        list.add("u1f682");
        list.add("u1f683");
        list.add("u1f684");
        list.add("u1f685");
        list.add("u1f686");
        list.add("u1f687");
        list.add("u1f688");
        list.add("u1f689");
        list.add("u1f68a");
        list.add("u1f68c");
        list.add("u1f68d");
        list.add("u1f68e");
        list.add("u1f68f");
        list.add("u1f690");
        list.add("u1f691");
        list.add("u1f692");
        list.add("u1f693");
        list.add("u1f694");
        list.add("u1f695");
        list.add("u1f696");
        list.add("u1f697");
        list.add("u1f698");
        list.add("u1f699");
        list.add("u1f69a");
        list.add("u1f69b");
        list.add("u1f69c");
        list.add("u1f69d");
        list.add("u1f69e");
        list.add("u1f69f");
        list.add("u1f6a0");
        list.add("u1f6a1");
        list.add("u1f6a2");
        list.add("u1f6a3");
        list.add("u1f6a4");
        list.add("u1f6a5");
        list.add("u1f6a6");
        list.add("u1f6a7");
        list.add("u1f6a8");
        list.add("u1f6a9");
        list.add("u1f6aa");
        list.add("u1f6ab");
        list.add("u1f6ac");
        list.add("u1f6ad");
        list.add("u1f6ae");
        list.add("u1f6af");
        list.add("u1f6b0");
        list.add("u1f6b1");
        list.add("u1f6b2");
        list.add("u1f6b3");
        list.add("u1f6b4");
        list.add("u1f6b5");
        list.add("u1f6b6");
        list.add("u1f6b7");
        list.add("u1f6b8");
        list.add("u1f6b9");
        list.add("u1f6ba");
        list.add("u1f6bb");
        list.add("u1f6bc");
        list.add("u1f6bd");
        list.add("u1f6be");
        list.add("u1f6bf");
        list.add("u1f6c0");
        list.add("u1f6c1");
        list.add("u1f6c2");
        list.add("u1f6c3");
        list.add("u1f6c4");
        list.add("u1f6c5");
        list.add("u203c");
        list.add("u2049");
        list.add("u2122");
        list.add("u2139");
        list.add("u2194");
        list.add("u2195");
        list.add("u2196");
        list.add("u2197");
        list.add("u2198");
        list.add("u2199");
        list.add("u21a9");
        list.add("u21aa");
        list.add("u231a");
        list.add("u231b");
        list.add("u23e9");
        list.add("u23ea");
        list.add("u23eb");
        list.add("u23ec");
        list.add("u23f0");
        list.add("u23f3");
        list.add("u24c2");
        list.add("u25aa");
        list.add("u25ab");
        list.add("u25b6");
        list.add("u25c0");
        list.add("u25fb");
        list.add("u25fc");
        list.add("u25fd");
        list.add("u25fe");
        list.add("u2600");
        list.add("u2601");
        list.add("u260e");
        list.add("u2611");
        list.add("u2614");
        list.add("u2615");
        list.add("u261d");
        list.add("u263a");
        list.add("u2648");
        list.add("u2649");
        list.add("u264a");
        list.add("u264b");
        list.add("u264c");
        list.add("u264d");
        list.add("u264e");
        list.add("u264f");
        list.add("u2650");
        list.add("u2651");
        list.add("u2652");
        list.add("u2653");
        list.add("u2660");
        list.add("u2663");
        list.add("u2665");
        list.add("u2666");
        list.add("u2668");
        list.add("u267b");
        list.add("u267f");
        list.add("u2693");
        list.add("u26a0");
        list.add("u26a1");
        list.add("u26aa");
        list.add("u26ab");
        list.add("u26bd");
        list.add("u26be");
        list.add("u26c4");
        list.add("u26c5");
        list.add("u26ce");
        list.add("u26d4");
        list.add("u26ea");
        list.add("u26f2");
        list.add("u26f3");
        list.add("u26f5");
        list.add("u26fa");
        list.add("u26fd");
        list.add("u2702");
        list.add("u2705");
        list.add("u2708");
        list.add("u2709");
        list.add("u270a");
        list.add("u270b");
        list.add("u270c");
        list.add("u270f");
        list.add("u2712");
        list.add("u2714");
        list.add("u2716");
        list.add("u2728");
        list.add("u2733");
        list.add("u2734");
        list.add("u2744");
        list.add("u2747");
        list.add("u274c");
        list.add("u274e");
        list.add("u2753");
        list.add("u2754");
        list.add("u2755");
        list.add("u2757");
        list.add("u2764");
        list.add("u2795");
        list.add("u2796");
        list.add("u2797");
        list.add("u27a1");
        list.add("u27b0");
        list.add("u2934");
        list.add("u2935");
        list.add("u2b05");
        list.add("u2b06");
        list.add("u2b07");
        list.add("u2b1b");
        list.add("u2b1c");
        list.add("u2b50");
        list.add("u2b55");
        list.add("u3030");
        list.add("u303d");
        list.add("u3297");
        list.add("u3299");
    }
}
